{"ast":null,"code":"import _toConsumableArray from \"/Users/tsuruganokousuke/git/react-todo-garage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/tsuruganokousuke/git/react-todo-garage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/tsuruganokousuke/git/react-todo-garage/frontend/src/App.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { Input } from \"./components/Input\";\nimport { Incomplete } from \"./components/Incomplete\";\nimport { Complete } from \"./components/Complete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var App = function App() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoText = _useState2[0],\n      setTodoText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      incompleteTodos = _useState4[0],\n      setIncompleteTodos = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      completeTodos = _useState6[0],\n      setCompleteTodos = _useState6[1];\n\n  var onChangeTodoText = function onChangeTodoText(e) {\n    setTodoText(e.target.value);\n  };\n\n  var onClickAdd = function onClickAdd() {\n    if (todoText === \"\") return;\n    setIncompleteTodos([].concat(_toConsumableArray(incompleteTodos), [todoText]));\n    setTodoText(\"\");\n  };\n\n  var onClickDelete = function onClickDelete(i) {\n    var newTodos = _toConsumableArray(incompleteTodos);\n\n    newTodos.splice(i, 1);\n    setIncompleteTodos(newTodos);\n  };\n\n  var onClickComplete = function onClickComplete(i) {\n    var newIncompleteTodos = _toConsumableArray(incompleteTodos);\n\n    newIncompleteTodos.splice(i, 1);\n    var newCompleteTodos = [].concat(_toConsumableArray(completeTodos), [incompleteTodos[i]]);\n    setIncompleteTodos(newIncompleteTodos);\n    setCompleteTodos(newCompleteTodos);\n  };\n\n  var onClickBack = function onClickBack(i) {\n    var newCompleteTodos = _toConsumableArray(completeTodos);\n\n    newCompleteTodos.splice(i, 1);\n    var newIncompleteTodos = [].concat(_toConsumableArray(incompleteTodos), [completeTodos[i]]);\n    setCompleteTodos(newCompleteTodos);\n    setIncompleteTodos(newIncompleteTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      todoText: todoText,\n      onChangeTodoText: onChangeTodoText,\n      onClickAdd: onClickAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Incomplete, {\n      todo: incompleteTodos,\n      onClickComplete: onClickComplete,\n      onClickDelete: onClickDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Complete, {\n      todo: completeTodos,\n      onClickBack: onClickBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(App, \"6sjjupbd+C/9cL/w5VnyjMBy2Hc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tsuruganokousuke/git/react-todo-garage/frontend/src/App.jsx"],"names":["React","useState","Input","Incomplete","Complete","App","todoText","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","onChangeTodoText","e","target","value","onClickAdd","onClickDelete","i","newTodos","splice","onClickComplete","newIncompleteTodos","newCompleteTodos","onClickBack"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AACvB,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8CN,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAOO,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,mBAA0CR,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOS,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC9BN,IAAAA,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIV,QAAQ,KAAK,EAAjB,EAAqB;AACrBG,IAAAA,kBAAkB,8BAAKD,eAAL,IAAsBF,QAAtB,GAAlB;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAJD;;AAMA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AAC3B,QAAMC,QAAQ,sBAAOX,eAAP,CAAd;;AACAW,IAAAA,QAAQ,CAACC,MAAT,CAAgBF,CAAhB,EAAmB,CAAnB;AACAT,IAAAA,kBAAkB,CAACU,QAAD,CAAlB;AACD,GAJD;;AAMA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACH,CAAD,EAAO;AAC7B,QAAMI,kBAAkB,sBAAOd,eAAP,CAAxB;;AACAc,IAAAA,kBAAkB,CAACF,MAAnB,CAA0BF,CAA1B,EAA6B,CAA7B;AAEA,QAAMK,gBAAgB,gCAAOb,aAAP,IAAsBF,eAAe,CAACU,CAAD,CAArC,EAAtB;AACAT,IAAAA,kBAAkB,CAACa,kBAAD,CAAlB;AACAX,IAAAA,gBAAgB,CAACY,gBAAD,CAAhB;AACD,GAPD;;AASA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACN,CAAD,EAAO;AACzB,QAAMK,gBAAgB,sBAAOb,aAAP,CAAtB;;AACAa,IAAAA,gBAAgB,CAACH,MAAjB,CAAwBF,CAAxB,EAA2B,CAA3B;AAEA,QAAMI,kBAAkB,gCAAOd,eAAP,IAAwBE,aAAa,CAACQ,CAAD,CAArC,EAAxB;AAEAP,IAAAA,gBAAgB,CAACY,gBAAD,CAAhB;AACAd,IAAAA,kBAAkB,CAACa,kBAAD,CAAlB;AACD,GARD;;AASA,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEhB,QADZ;AAEE,MAAA,gBAAgB,EAAEM,gBAFpB;AAGE,MAAA,UAAU,EAAEI;AAHd;AAAA;AAAA;AAAA;AAAA,aADF,eAME,QAAC,UAAD;AACE,MAAA,IAAI,EAAER,eADR;AAEE,MAAA,eAAe,EAAEa,eAFnB;AAGE,MAAA,aAAa,EAAEJ;AAHjB;AAAA;AAAA;AAAA;AAAA,aANF,eAWE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEP,aAAhB;AAA+B,MAAA,WAAW,EAAEc;AAA5C;AAAA;AAAA;AAAA;AAAA,aAXF;AAAA,kBADF;AAeD,CAtDM;;GAAMnB,G;;KAAAA,G","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { Input } from \"./components/Input\";\nimport { Incomplete } from \"./components/Incomplete\";\nimport { Complete } from \"./components/Complete\";\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n  const [completeTodos, setCompleteTodos] = useState([]);\n\n  const onChangeTodoText = (e) => {\n    setTodoText(e.target.value);\n  };\n\n  const onClickAdd = () => {\n    if (todoText === \"\") return;\n    setIncompleteTodos([...incompleteTodos, todoText]);\n    setTodoText(\"\");\n  };\n\n  const onClickDelete = (i) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(i, 1);\n    setIncompleteTodos(newTodos);\n  };\n\n  const onClickComplete = (i) => {\n    const newIncompleteTodos = [...incompleteTodos];\n    newIncompleteTodos.splice(i, 1);\n\n    const newCompleteTodos = [...completeTodos, incompleteTodos[i]];\n    setIncompleteTodos(newIncompleteTodos);\n    setCompleteTodos(newCompleteTodos);\n  };\n\n  const onClickBack = (i) => {\n    const newCompleteTodos = [...completeTodos];\n    newCompleteTodos.splice(i, 1);\n\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[i]];\n\n    setCompleteTodos(newCompleteTodos);\n    setIncompleteTodos(newIncompleteTodos);\n  };\n  return (\n    <>\n      <Input\n        todoText={todoText}\n        onChangeTodoText={onChangeTodoText}\n        onClickAdd={onClickAdd}\n      />\n      <Incomplete\n        todo={incompleteTodos}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n      />\n      <Complete todo={completeTodos} onClickBack={onClickBack} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}